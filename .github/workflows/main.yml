name: Java CI with Maven

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to trigger the build'
        required: false
        default: 'main'
        type: string
      docker_image_name:
        description: 'Docker image name'
        required: true
        type: string
      mvn_file:
        description: 'Maven file'
        required: false
        default: 'pom.xml'
        type: string
      mvn_options:
        description: 'Additional Maven options'
        required: false
        default: '-B'
        type: string
      mvn_actions:
        description: 'Additional Maven actions'
        required: false
        default: 'package'
        type: string
      jdk_version:
        description: 'JDK version to use'
        required: false
        default: '17'
        type: string
      jdk_distribution:
        description: 'JDK distribution to use'
        required: false
        default: 'temurin'
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      SNYK_TOKEN:
        required: true
      JFROG_TOKEN:
        required: true
      JFROG_URL: 
        required: true
      JFROG_USERNAME:
        required: true
      JFROG_DOMAIN:
        required: true
      JFROG_DOCKER_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
permissions:
  security-events: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # - name: Send Slack Notification - Build Started
    #   uses: rtCamp/action-slack-notify@v2
    #   env:
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ Build Started for Branch: *${{ inputs.branch }}*"
    #     color: "#36a64f"
    - name: Post a message in a channel
      uses: slackapi/slack-github-action@v2.0.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "*GitHub Action started*: ${{ job.status }}"

    # - uses: actions/checkout@v4
    #   with:
    #     repository: ${{ github.repository }}
    #     ref: ${{ inputs.branch }}
        
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: ${{ inputs.jdk_version }}
    #     distribution: ${{ inputs.jdk_distribution }}
    #     cache: maven
        
    # - name: Build with Maven
    #   run: mvn ${{ inputs.mvn_options }} ${{inputs.mvn_actions}} --file ${{ inputs.mvn_file }}
      
    # - name: Send Slack Notification 
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ Maven Build finished"
    #     color: "#36a64f"
        
    # - name: Set up Docker BuildX
    #   uses: docker/setup-buildx-action@v3
      
    # - name: Log in to Docker hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build Docker image
    #   run: |
    #      docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest .
         
    # - name: Send Slack Notification 
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ Building docker image successful"
    #     color: "#36a64f"

    # - name: Scan Docker image üê≥
    #   uses: snyk/actions/docker@master
    #   continue-on-error: true
    #   with:
    #     image: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest
    #     args: --severity-threshold=high --sarif-file-output=snyk.sarif
    #   env:
    #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    # - name: Send Slack Notification - Build Started
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ Docker image scan done"
    #     color: "#36a64f"
        
    # - name: JFrog CLI Setup
    #   uses: jfrog/setup-jfrog-cli@v4
    #   env:
    #     JF_URL: ${{ secrets.JFROG_URL }}
    #     JF_USER: ${{ secrets.JFROG_USERNAME }}
    #     JF_PASSWORD: ${{ secrets.JFROG_TOKEN }}
        
    # - name: Upload JAR to JFrog Artifactory
    #   run: |
    #      jf rt u "target/*.jar" "github-ci-maven/"
         
    # - name: Send Slack Notification 
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ Maven jar uploaded to jfrog artifacts"
    #     color: "#36a64f"
        
    # - name: Push Docker Image to docker Hub
    #   run: |
    #      docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest 

    # - name: Send Slack Notification 
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄ image pushed to docker hub"
    #     color: "#36a64f"
        
    # - name: Tag Image for JFrog
    #   run: |
    #      docker tag ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest ${{ secrets.JFROG_DOMAIN }}/github-ci-docker/${{ inputs.docker_image_name }}:latest
         
    # - name: Log in to JFrog Docker Registry
    #   run: |
    #      echo ${{ secrets.JFROG_DOCKER_TOKEN }} | docker login ${{ secrets.JFROG_DOMAIN }} -u ${{ secrets.JFROG_USERNAME }} --password-stdin
         
    # - name: Push Docker Image to JFrog
    #   run: |
    #      docker push ${{ secrets.JFROG_DOMAIN }}/github-ci-docker/${{ inputs.docker_image_name }}:latest  
         
    # - name: Send Slack Notification 
    #   uses: rtCamp/action-slack-notify@v2
    #   with:
    #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     message: "üöÄimage pushed to jfrog. Pipeline is successful"
    #     color: "#36a64f"
