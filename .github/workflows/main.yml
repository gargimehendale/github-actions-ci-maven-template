name: Java CI with Maven

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to trigger the build'
        required: false
        default: 'main'
        type: string
      docker_image_name:
        description: 'Docker image name'
        required: true
        type: string
      mvn_file:
        description: 'Maven file'
        required: false
        default: 'pom.xml'
        type: string
      mvn_options:
        description: 'Additional Maven options'
        required: false
        default: '-B'
        type: string
      mvn_actions:
        description: 'Additional Maven actions'
        required: false
        default: 'package'
        type: string
      jdk_version:
        description: 'JDK version to use'
        required: false
        default: '17'
        type: string
      jdk_distribution:
        description: 'JDK distribution to use'
        required: false
        default: 'temurin'
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ inputs.branch }}
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.jdk_version }}
        distribution: ${{ inputs.jdk_distribution }}
        cache: maven
        
    - name: Build with Maven
      run: mvn ${{ inputs.mvn_options }} ${{inputs.mvn_actions}} --file ${{ inputs.mvn_file }}
      
    - name: Set up Docker BuildX
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
         docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest .
         
    - name: Scan Docker image üê≥
      uses: snyk/actions/docker@master
      continue-on-error: true
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest
        args: --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Upload Snyk report as sarif üì¶
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
              
    - name: Push Docker Image to docker Hub
      run: |
         docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.docker_image_name }}:latest 
